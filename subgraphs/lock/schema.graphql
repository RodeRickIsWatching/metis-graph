type LockedParam @entity {
  # address
  id: ID!
  user: String!
  signer: String!
  sequencerId: BigInt!
  nonce: BigInt!
  activationBatch: BigInt!
  amount: BigInt!
  total: BigInt!
  signerPubkey: String!
}

type UnlockedParam @entity {
  # address
  id: ID!
  user: String!
  sequencerId: BigInt!
  amount: BigInt!
  total: BigInt!
}

type UnlockInitParam @entity {
  # address
  id: ID!

  user: String!
  sequencerId: BigInt!
  nonce: BigInt!
  deactivationBatch: BigInt!
  deactivationTime: BigInt!
  unlockClaimTime: BigInt!
  amount: BigInt!
  # total: BigInt!
}

type RelockedParam @entity {
  # address
  id: ID!
  user: String!
  sequencerId: BigInt!
  amount: BigInt!
  total: BigInt!
}

type WithrawDelayTimeChangeParam @entity {
  # address
  id: ID!
  user: String!
  newWithrawDelayTime: BigInt!
  oldWithrawDelayTime: BigInt!
}

type RewardUpdateParam @entity {
  # address
  id: ID!
  user: String!
  oldReward: BigInt!
  newReward: BigInt!
}

type ClaimRewardsParam @entity {
  # address
  id: ID!
  user: String!
  sequencerId: BigInt!
  amount: BigInt!
  totalAmount: BigInt!
}

type LockUpdateParam @entity {
  # address
  id: ID!
  user: String!
  sequencerId: BigInt!
  newAmount: BigInt!
  nonce: BigInt!
}